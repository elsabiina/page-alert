// dbdiagram
// ---------------------------------------------
// page_alert - MVP
// version: 0.1.0
// ---------------------------------------------

// Definir los enums
Enum notification_type_enum {
  email
  push
}

Enum notification_status_enum {
  pending
  sent
  failed
}


Table users {
  id               bigint              [pk, increment]
  sso_provider     varchar(50)         [not null]   // ej: 'google', 'github', ...
  sso_user_uid     varchar(255)        [not null]
  email            citext              [not null, unique]
  alias            varchar(120)
  avatar_url       text
  created_at       timestamptz         [default: `now()`]
  updated_at       timestamptz         [default: `now()`]

  indexes {
    (sso_provider, sso_user_uid) [unique, name: 'idx_users_sso_provider_uid']
    (email)                 [name: 'idx_users_email']
  }
}

Table urls {
  id               bigint              [pk, increment]
  url              text                [not null, unique]
  bodyHash         text
  selector         text                           // CSS / XPath opcional
  type_check       varchar(20)         [not null] // 'any_change', 'element', 'price'
  price_min        decimal(12,2)                  // solo si type_check = 'price'
  price_max        decimal(12,2)                  // solo si type_check = 'price'
  created_at       timestamptz         [default: `now()`]
  updated_at       timestamptz         [default: `now()`]

  indexes {
    (url) [name: 'idx_urls_url']
  }
}

Table user_has_urls {
  id               bigint              [pk, increment]
  user_id          bigint              [not null, ref: > users.id]
  url_id           bigint              [not null, ref: > urls.id]
  created_at       timestamptz         [default: `now()`]
  updated_at       timestamptz         [default: `now()`]

  indexes {
    (user_id) [name: 'idx_user_has_urls_user_id']
    (url_id)  [name: 'idx_user_has_urls_url_id']
    (user_id, url_id) [unique, name: 'idx_user_has_urls_unique_pair']
  }
}

Table notifications {
  id               bigint                   [pk, increment]
  user_id          bigint                   [not null, ref: > users.id]
  url_id           bigint                   [not null, ref: > urls.id]
  type             notification_type_enum   [not null] // 'email', 'push'
  status           notification_status_enum [not null, default: 'pending'] // 'pending', 'sent', 'failed'
  payload          jsonb                    [not null] // datos del cambio detectado o del eror en el caso de fallo
  created_at       timestamptz              [default: `now()`]
  updated_at       timestamptz              [default: `now()`]

  indexes {
    (user_id) [name: 'idx_notifications_user_id']
    (url_id)  [name: 'idx_notifications_url_id']
    (status)  [name: 'idx_notifications_status']
  }
}
